<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gdut.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="cn.gdut.domain.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_role" jdbcType="INTEGER" property="userRole" />
    <result column="user_balance" jdbcType="DECIMAL" property="userBalance" />
    <result column="user_create_time" jdbcType="TIMESTAMP" property="userCreateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_account, user_name, user_role, user_balance, user_create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.gdut.domain.User" useGeneratedKeys="true"  keyProperty="userId">
    insert into user (user_id, user_account, user_password, 
      user_name, user_role, user_balance, 
      user_create_time)
    values (#{userId,jdbcType=INTEGER}, #{userAccount,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{userRole,jdbcType=INTEGER}, #{userBalance,jdbcType=DECIMAL}, 
      #{userCreateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.gdut.domain.User" useGeneratedKeys="true"  keyProperty="userId">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userAccount != null">
        user_account,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userRole != null">
        user_role,
      </if>
      <if test="userBalance != null">
        user_balance,
      </if>
      <if test="userCreateTime != null">
        user_create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userAccount != null">
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        #{userRole,jdbcType=INTEGER},
      </if>
      <if test="userBalance != null">
        #{userBalance,jdbcType=DECIMAL},
      </if>
      <if test="userCreateTime != null">
        #{userCreateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gdut.domain.User">
    update user
    <set>
      <if test="userAccount != null">
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        user_role = #{userRole,jdbcType=INTEGER},
      </if>
      <if test="userBalance != null">
        user_balance = #{userBalance,jdbcType=DECIMAL},
      </if>
      <if test="userCreateTime != null">
        user_create_time = #{userCreateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gdut.domain.User">
    update user
    set user_account = #{userAccount,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_role = #{userRole,jdbcType=INTEGER},
      user_balance = #{userBalance,jdbcType=DECIMAL},
      user_create_time = #{userCreateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
  
  <select id="selectByLogin" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_account = #{userAccount,jdbcType=VARCHAR} and user_password = #{userPassword,jdbcType=VARCHAR}
  </select>
  
  
  
</mapper>